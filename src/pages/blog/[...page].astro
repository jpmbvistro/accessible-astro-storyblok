---
import DefaultLayout from '../../layouts/DefaultLayout.astro'
import { Card, Pagination } from 'accessible-astro-components'

import { storyblokEditable } from '@storyblok/astro'
import { useStoryblokApi } from '@storyblok/astro'

const storyblokApi = useStoryblokApi();
const slug = Astro.params.slug;
const PER_PAGE = 6;

const { data, headers } = await storyblokApi.get('cdn/stories', {
  version: import.meta.env.DEV ? "draft" : "published",
  content_type: 'blogPost',
  per_page: PER_PAGE,
  page: slug || 0,
})

const total = headers['total'];
console.log('TOTAL', total)
console.log('DATA', data)



// export async function getStaticPaths({ paginate }) {
//   const response = await fetch('https://jsonplaceholder.typicode.com/posts')
//   const data = await response.json()

//   return paginate(data, { pageSize: 6 })
// }

// const { page } = Astro.props
---

<DefaultLayout
  title="Blog"
  description="An example of a blog with dynamic content fetched from JSONPlaceholder using the title, body and userId."
>
  <section class="my-12">
    <div class="space-content container">
      <h1>Blog</h1>
      <p class="text-2xl">
        An example of a blog with dynamic content fetched from <a href="https://jsonplaceholder.typicode.com/posts"
          >JSONPlaceholder</a
        > using the title, body and userId. The Accessible Astro Card Component is used here to display al the posts.
      </p>
    </div>
  </section>
  <section class="my-12">
    <div class="container">
      <p class="text-sm"><em>Post {PER_PAGE * (slug || 0) + 1} through {PER_PAGE * (slug || 0) + data.stories.length + 1} of {total | 0} total posts</em></p>
      <ul class="my-3">
        {
          data.stories.map((story) => (
            <li>
              <Card
                url={`post/${story.slug}`}
                title={story.name}
                footer={'date:' + story.published_at}
              >
                {story.content.description}
              </Card>
            </li>
          ))
        }
      </ul>
      <div class="mt-12 grid place-content-center">
        <!-- <Pagination
          firstPage={page.url.prev ? '/blog' : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={page.url.next ? `/blog/${Math.round(page.total / page.size)}` : null}
          currentPage={page.currentPage}
          totalPages={Math.round(page.total / page.size)}
        /> -->
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
